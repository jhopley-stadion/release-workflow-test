name: Create Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest version
        id: get_latest_version
        run: |
          latest_tag=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "1.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Get branch type
        id: get_branch_type
        run: |
          branch_name=$(echo "${GITHUB_REF#refs/heads/}")
          if [[ "$branch_name" == release/* ]]; then
            branch_type="release"
          elif [[ "$branch_name" == hotfix/* ]]; then
            branch_type="hotfix"
          else
            echo "Branch does not match expected patterns"
            exit 1
          fi
          echo "branch_type=$branch_type" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.latest_tag }}"
          if [[ "${{ env.branch_type }}" == "release" ]]; then
            minor=$((minor + 1))
            new_tag="$major.$minor.0"
          elif [[ "${{ env.branch_type }}" == "hotfix" ]]; then
            patch=$((patch + 1))
            new_tag="$major.$minor.$patch"
          else
            echo "Unknown branch type"
            exit 1
          fi
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Tag the new version
        run: |
          gh release create ${{ env.new_tag }} --title "Release ${{ env.new_tag }}" --target main --notes ""

      - name: Generate and apply release notes
        run: |
          gh release edit ${{ env.new_tag }} --notes "Release notes have been generated by Release Drafter."

      - name: Rebase develop with main for hotfixes
        if: env.branch_type == 'hotfix'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin develop
          git checkout develop
          git rebase origin/main
          git push origin develop --force-with-lease
